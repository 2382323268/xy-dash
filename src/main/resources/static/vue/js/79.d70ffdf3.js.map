{"version":3,"file":"js/79.d70ffdf3.js","mappings":"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","sources":["webpack://xy-dash-admin/./src/views/config/migration/operation/components/field.vue","webpack://xy-dash-admin/./src/views/config/migration/operation/components/field.vue?204f"],"sourcesContent":["<template>\r\n  <el-row :span=\"3\">\r\n    <el-col :span=\"5\">\r\n      <el-select v-model=\"value\" :popper-append-to-body=\"true\" class=\"m-2\">\r\n        <el-option\r\n          v-for=\"item in migrationsForm.list\"\r\n          :key=\"item.random\"\r\n          :label=\"item.uniqueName + '/' + item.name\"\r\n          :value=\"item.random\"\r\n        />\r\n      </el-select>\r\n    </el-col>\r\n    <el-button type=\"primary\" @click=\"isShow\" plain>隐藏/显示</el-button>\r\n\r\n    <el-button type=\"success\" @click=\"joinTableRow()\" plain\r\n      >添加副数据表</el-button\r\n    >\r\n    <el-button type=\"success\" @click=\"selectRow()\" plain\r\n      >设置查询条件</el-button\r\n    >\r\n  </el-row>\r\n  <el-table\r\n    :data=\"fieldData\"\r\n    stripe\r\n    style=\"width: 100%\"\r\n    :header-cell-style=\"tableHeaderColor\"\r\n  >\r\n    <el-table-column type=\"selection\" width=\"55\" />\r\n    <el-table-column label=\"字段名称\" prop=\"name\" width=\"150\" align=\"center\" />\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"字段类型(mysql)\"\r\n      prop=\"type\"\r\n      width=\"150\"\r\n      align=\"center\"\r\n    />\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"字段类型(java)\"\r\n      prop=\"javaType\"\r\n      width=\"150\"\r\n      align=\"center\"\r\n    />\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"数据库默认值\"\r\n      width=\"150\"\r\n      prop=\"def\"\r\n      align=\"center\"\r\n    />\r\n\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"字段大小\"\r\n      width=\"150\"\r\n      prop=\"size\"\r\n      align=\"center\"\r\n    >\r\n    </el-table-column>\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"字段描述\"\r\n      width=\"150\"\r\n      prop=\"remark\"\r\n      align=\"center\"\r\n    />\r\n    <el-table-column\r\n      v-if=\"show\"\r\n      label=\"是否为空\"\r\n      width=\"150\"\r\n      prop=\"isNull\"\r\n      align=\"center\"\r\n    />\r\n    <el-table-column\r\n      label=\"映射字段名称\"\r\n      width=\"150\"\r\n      prop=\"sourceName\"\r\n      align=\"center\"\r\n    >\r\n    </el-table-column>\r\n    <el-table-column\r\n      label=\"映射字段类型(mysql)\"\r\n      width=\"190\"\r\n      prop=\"sourceType\"\r\n      align=\"center\"\r\n    >\r\n    </el-table-column>\r\n    <el-table-column\r\n      label=\"映射字段类型(java)\"\r\n      width=\"190\"\r\n      prop=\"sourceJavaType\"\r\n      align=\"center\"\r\n    >\r\n    </el-table-column>\r\n    <el-table-column label=\"映射类型转换\" align=\"center\" width=\"170\">\r\n      <template v-slot=\"scope\">\r\n        <span v-show=\"scope.row.typeConversion == 0\"> 无需转换 </span>\r\n        <span v-show=\"scope.row.typeConversion == 1\"> 支持 </span>\r\n        <span v-show=\"scope.row.typeConversion == 2\"> 不支持 </span>\r\n      </template>\r\n    </el-table-column>\r\n    <el-table-column\r\n      label=\"映射默认值\"\r\n      align=\"center\"\r\n      prop=\"defaulted\"\r\n      width=\"170\"\r\n    >\r\n    </el-table-column>\r\n    <el-table-column label=\"映射枚举\" align=\"center\"> </el-table-column>\r\n    <el-table-column label=\"操作\" align=\"center\" width=\"150\">\r\n      <template v-slot=\"scope\"\r\n        ><el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"updateRow(scope.row)\"\r\n          plain\r\n          >操作</el-button\r\n        >\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          @click=\"deleteRow(scope.$index)\"\r\n          plain\r\n          >清空</el-button\r\n        ></template\r\n      >\r\n    </el-table-column>\r\n  </el-table>\r\n  <el-dialog\r\n    :modelValue=\"update\"\r\n    title=\"映射字段\"\r\n    width=\"30%\"\r\n    @close=\"handleClose\"\r\n  >\r\n    <el-form :model=\"updateValue\" label-width=\"auto\">\r\n      <el-form-item v-show=\"updateValue.status == 1\" label=\"id生成策略\">\r\n        <el-select v-model=\"idType\" style=\"width: 80px\" placeholder=\" \">\r\n          <el-option\r\n            v-for=\"item in selectIdType\"\r\n            :key=\"item.type\"\r\n            :label=\"item.value\"\r\n            :value=\"item.type\"\r\n          >\r\n          </el-option> </el-select\r\n      ></el-form-item>\r\n      <el-form-item\r\n        v-show=\"updateValue.status != 1 || idType == 1\"\r\n        label=\"选择映射字段\"\r\n        style=\"width: 300px\"\r\n      >\r\n        <el-cascader\r\n          v-model=\"joinTableRef.joinTable\"\r\n          :props=\"joinTableOptions\"\r\n          @change=\"changeJoinTable($event)\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-form-item\r\n        v-show=\"updateValue.status != 1 || idType == 1\"\r\n        label=\"设置默认值\"\r\n        style=\"width: 300px; position: absolute\"\r\n      >\r\n        <div v-show=\"updateValue.defaultValue == 2\">\r\n          <el-input v-model=\"updateValue.defaulted\" clearable></el-input>\r\n        </div>\r\n        <div v-show=\"updateValue.defaultValue == 1\">\r\n          <el-date-picker\r\n            v-model=\"updateValue.defaulted\"\r\n            type=\"datetime\"\r\n            format=\"YYYY-MM-DD hh:mm:ss\"\r\n            value-format=\"YYYY-MM-DD hh:mm:ss\"\r\n            placeholder=\"选择默认时间\"\r\n          />\r\n        </div>\r\n\r\n        <span v-show=\"updateValue.defaultValue == 0\">无</span></el-form-item\r\n      >\r\n    </el-form>\r\n\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button\r\n          v-show=\"\r\n            joinTableRef.joinTable != null &&\r\n            joinTableRef.joinTable.length == 2 &&\r\n            joinTableRef.joinTable[1] != null &&\r\n            joinTableRef.joinTable[0].name == '选择主数据表' &&\r\n            migrationsForm.type == 2 &&\r\n            (!timeType || joinTableRef.joinTable[1].status == 2) &&\r\n            joinTableRef.joinTable[1].status != 1 &&\r\n            (joinTableRef.joinTable[1].javaType == 'Long' ||\r\n              joinTableRef.joinTable[1].javaType == 'LocalDateTime')\r\n          \"\r\n          type=\"primary\"\r\n          @click=\"setTime\"\r\n          >{{ timeBut }}</el-button\r\n        >\r\n        <el-button type=\"primary\" @click=\"saveRow\">确认</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n  <el-dialog\r\n    :modelValue=\"joinTable\"\r\n    title=\"添加副数据表\"\r\n    width=\"30%\"\r\n    @close=\"joinTableClose\"\r\n  >\r\n    <el-form-item label=\"选副数据择表\" style=\"width: 300px\">\r\n      <el-cascader\r\n        v-model=\"joinTableRef.dataSources\"\r\n        :props=\"tableOptions\"\r\n        @change=\"changeTable($event, index)\"\r\n      />\r\n    </el-form-item>\r\n    <el-form-item label=\"选择join字段\" style=\"width: 300px\">\r\n      <el-select :ref=\"select\" v-model=\"joinTableRef.join\" clearable>\r\n        <el-option\r\n          v-for=\"item in joinTableRef.joinFieldList\"\r\n          :key=\"item.name\"\r\n          :label=\"item.name\"\r\n          :value=\"item.name\"\r\n        >\r\n        </el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <el-form-item label=\"选择查询字段\" style=\"width: 300px\">\r\n      <el-select\r\n        :ref=\"select\"\r\n        v-model=\"joinTableRef.query\"\r\n        :popper-append-to-body=\"true\"\r\n        clearable\r\n      >\r\n        <el-option\r\n          v-for=\"item in fieldList\"\r\n          :key=\"item.name\"\r\n          :label=\"item.name\"\r\n          :value=\"item.name\"\r\n        >\r\n        </el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"joinTableSave\">确认</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n  <el-dialog\r\n    :modelValue=\"tableSelect\"\r\n    title=\"设置查询条件\"\r\n    width=\"50%\"\r\n    @close=\"tableSelectClose\"\r\n  >\r\n    <el-form-item label=\"选择表\">\r\n      <el-select\r\n        v-model=\"queryName.name\"\r\n        :popper-append-to-body=\"true\"\r\n        clearable\r\n      >\r\n        <el-option\r\n          v-for=\"item in joinTableList\"\r\n          :key=\"\r\n            item.name == '选择主数据表'\r\n              ? item.name\r\n              : item.uniqueName + '/' + item.name + '/' + item.field\r\n          \"\r\n          :label=\"\r\n            item.name == '选择主数据表'\r\n              ? item.name\r\n              : item.uniqueName + '/' + item.name + '/' + item.field\r\n          \"\r\n          :value=\"\r\n            item.name == '选择主数据表'\r\n              ? item.name\r\n              : item.uniqueName + '/' + item.name + '/' + item.field\r\n          \"\r\n        >\r\n        </el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"字段\" v-for=\"e in queryList\">\r\n      <el-col :span=\"8\">\r\n        <el-select\r\n          :ref=\"select\"\r\n          v-model=\"e.field\"\r\n          :disabled=\"e.query == 'last'\"\r\n          :popper-append-to-body=\"true\"\r\n          clearable\r\n        >\r\n          <el-option\r\n            v-for=\"item in queryName.list\"\r\n            :key=\"item.name\"\r\n            :label=\"item.name\"\r\n            :value=\"item.name\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-select\r\n          :ref=\"select\"\r\n          v-model=\"e.query\"\r\n          style=\"width: 80px\"\r\n          placeholder=\" \"\r\n          clearable\r\n        >\r\n          <el-option\r\n            v-for=\"item in query\"\r\n            :key=\"item\"\r\n            :label=\"item\"\r\n            :value=\"item\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"1\">\r\n        <span style=\"color: var(--el-text-color-regular)\">值</span>\r\n      </el-col>\r\n\r\n      <el-col :span=\"8\">\r\n        <el-tooltip\r\n          v-show=\"\"\r\n          content=\"多个值用英文逗号隔开\"\r\n          placement=\"left\"\r\n          auto-close=\"2000\"\r\n          effect=\"light\"\r\n        >\r\n          <span>&nbsp;</span>\r\n        </el-tooltip>\r\n\r\n        <el-input\r\n          v-show=\"selectShow(e.field)\"\r\n          style=\"height: 35px; width: 200px\"\r\n          v-model=\"e.value\"\r\n        />\r\n\r\n        <el-date-picker\r\n          v-if=\"!selectShow(e.field)\"\r\n          v-model=\"e.value\"\r\n          type=\"datetime\"\r\n          format=\"YYYY-MM-DD hh:mm:ss\"\r\n          value-format=\"YYYY-MM-DD hh:mm:ss\"\r\n          placeholder=\"选择默认时间\"\r\n        />\r\n      </el-col>\r\n\r\n      <el-button type=\"primary\" @click=\"tableSelectAdd\" plain>+</el-button>\r\n      <el-button type=\"danger\" @click=\"tableSelectDelete(e)\" plain>-</el-button>\r\n    </el-form-item>\r\n\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"tableSelectSave\">确认</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n<script setup>\r\nimport {\r\n  defineEmits,\r\n  defineExpose,\r\n  onMounted,\r\n  defineProps,\r\n  ref,\r\n  watch,\r\n  reactive,\r\n} from \"vue\";\r\nimport requestUtil from \"@/util/request\";\r\nimport { ElMessage } from \"element-plus\";\r\nconst databaseRef = ref(null);\r\nconst idType = ref(null);\r\nconst databaseIndexRef = ref([0]);\r\nconst tableRef = ref(null);\r\nconst timeType = ref(false);\r\nconst timeBut = ref(\"设置为指定时间\");\r\nconst tableRefSources = ref(null);\r\nconst tableIndexRef = ref([0]);\r\nconst fieldData = ref(null);\r\nconst value = ref(null);\r\nconst queryList = ref([{ index: parseInt(Math.random() * 1000000) }]);\r\nconst queryName = ref({ name: \"选择主数据表\", list: [] });\r\nconst fieldList = ref([]);\r\nconst joinTableRef = ref({});\r\nconst joinTableList = ref([]);\r\nconst updateValue = ref({});\r\nconst show = ref(false);\r\nconst update = ref(false);\r\nconst joinTable = ref(false);\r\nconst tableSelect = ref(false);\r\nconst refSelect = ref([]);\r\nlet tableOptions = ref({});\r\nlet joinTableOptions = ref({});\r\nconst query = [\r\n  \"=\",\r\n  \">\",\r\n  \">=\",\r\n  \"<\",\r\n  \"<=\",\r\n  \"!=\",\r\n  \"in\",\r\n  \"notIn\",\r\n  \"like\",\r\n  \"likeLeft\",\r\n  \"likeRight\",\r\n  \"isNull\",\r\n  \"isNotNull\",\r\n  \"notLike\",\r\n];\r\nconst selectIdType = [\r\n  { type: 1, value: \"映射\" },\r\n  { type: 2, value: \"自增\" },\r\n  { type: 3, value: \"雪花\" },\r\n  { type: 4, value: \"uuid\" },\r\n];\r\nconst typeMethod = [\r\n  \"IntegerToLong\",\r\n  \"IntegerToFloat\",\r\n  \"IntegerToDouble\",\r\n  \"IntegerToBoolean\",\r\n  \"IntegerToString\",\r\n  \"IntegerToBigDecimal\",\r\n  \"LongToInteger\",\r\n  \"LongToFloat\",\r\n  \"LongToDouble\",\r\n  \"LongToBoolean\",\r\n  \"LongToString\",\r\n  \"LongToBlob\",\r\n  \"LongToLocalDate\",\r\n  \"LongToLocalTime\",\r\n  \"LongToLocalDateTime\",\r\n  \"LongToByte\",\r\n  \"LongToBigDecimal\",\r\n  \"FloatToInteger\",\r\n  \"FloatToLong\",\r\n  \"FloatToDouble\",\r\n  \"FloatToBoolean\",\r\n  \"FloatToString\",\r\n  \"DoubleToInteger\",\r\n  \"DoubleToLong\",\r\n  \"DoubleToFloat\",\r\n  \"DoubleToBoolean\",\r\n  \"BooleanToInteger\",\r\n  \"BooleanToLong\",\r\n  \"BooleanToFloat\",\r\n  \"BooleanToDouble\",\r\n  \"BooleanToString\",\r\n  \"StringToInteger\",\r\n  \"StringToLong\",\r\n  \"StringToFloat\",\r\n  \"StringToDouble\",\r\n  \"StringToBoolean\",\r\n  \"StringToBlob\",\r\n  \"StringToClob\",\r\n  \"StringToLocalDate\",\r\n  \"StringToLocalTime\",\r\n  \"StringToBigDecimal\",\r\n  \"StringToByte\",\r\n  \"StringToLocalDateTime\",\r\n  \"BlobToByte\",\r\n  \"BlobToString\",\r\n  \"LocalDateToLong\",\r\n  \"LocalDateToString\",\r\n  \"LocalDateToLocalDateTime\",\r\n  \"LocalTimeToString\",\r\n  \"LocalTimeToLocalDateTime\",\r\n  \"LocalDateTimeToLong\",\r\n  \"LocalDateTimeToString\",\r\n  \"LocalDateTimeToLocalDate\",\r\n  \"LocalDateTimeToLocalTime\",\r\n  \"BigDecimalToInteger\",\r\n  \"BigDecimalToLong\",\r\n  \"BigDecimalToFloat\",\r\n  \"BigDecimalToDouble\",\r\n  \"BigDecimalToBoolean\",\r\n  \"BigDecimalToString\",\r\n  \"ByteToString\",\r\n  \"ByteToBlob\",\r\n];\r\nconst select = (el) => {\r\n  if (el) {\r\n    refSelect.value.push(el);\r\n  }\r\n};\r\n\r\nconst props = defineProps({\r\n  migrationsForm: {\r\n    type: Object,\r\n    default: null,\r\n    required: true,\r\n  },\r\n});\r\nconst getSourceData = (index, row) => {\r\n  let isHav = false;\r\n  if (row.sourceName == null) {\r\n    return null;\r\n  }\r\n  let data = null;\r\n  if (row.valueMap == null) {\r\n    fieldList.value.forEach((e) => {\r\n      if (e.name == row.sourceName) {\r\n        data = e;\r\n      }\r\n    });\r\n  } else {\r\n    joinTableList.value.forEach((e) => {\r\n      if (e.name == row.valueMap[1] && e.uniqueName == row.valueMap[0]) {\r\n        e.joinFieldList.forEach((v) => {\r\n          if (v.name == row.sourceName) {\r\n            data = v;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  if (data == null) {\r\n    return null;\r\n  }\r\n  if (data.javaType == row.javaType) {\r\n    row.typeConversion = 0;\r\n  } else {\r\n    const type = row.javaType == \"byte[]\" ? Byte : row.javaType;\r\n    const sourceType = data.javaType == \"byte[]\" ? Byte : data.javaType;\r\n    typeMethod.forEach((e) => {\r\n      if (isHav == true) {\r\n        return;\r\n      }\r\n      if (e == sourceType + \"To\" + type) {\r\n        isHav = true;\r\n      }\r\n    });\r\n    isHav == true ? (row.typeConversion = 1) : (row.typeConversion = 2);\r\n  }\r\n\r\n  row.sourceStatus = data.status;\r\n  row.sourceRemark = data.remark;\r\n  row.valueType = data.javaType;\r\n  row.sourceType = data.type;\r\n  row.sourceJavaType = data.javaType;\r\n};\r\n\r\nconst defaultValue = (data) => {\r\n  if ([\"byte[]\", \"Blob\", \"Clob\"].indexOf(data.javaType) > -1) {\r\n    return 0;\r\n  }\r\n  if (\r\n    [\"LocalDate\", \"LocalTime\", \"LocalDateTime\", \"Year\"].indexOf(data.javaType) >\r\n    -1\r\n  ) {\r\n    return 1;\r\n  }\r\n  return 2;\r\n};\r\n\r\nconst selectShow = (v) => {\r\n  if (v == null) {\r\n    return true;\r\n  }\r\n  const data = queryName.value.list.filter((e) => e.name == v)[0];\r\n  if (data == null) {\r\n    return true;\r\n  }\r\n  let type = data.javaType;\r\n  if (type == \"LocalDateTime\") {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\nconst isShow = () => {\r\n  show.value = !show.value;\r\n};\r\nconst setTime = () => {\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((v) => {\r\n      if (v.random == value.value) {\r\n        if (v.migration == false) {\r\n          v.migrationFields.forEach((z) => {\r\n            if (z.fieldName == joinTableRef.value.joinTable[1].name) {\r\n              if (z.status == 0 || z.status == null) {\r\n                z.status = 2;\r\n                timeType.value = true;\r\n                timeBut.value = \"取消指定时间\";\r\n              } else {\r\n                timeBut.value = \"设置为指定时间\";\r\n\r\n                timeType.value = false;\r\n                z.status = 0;\r\n              }\r\n              fieldList.value.forEach((x) => {\r\n                if (x.name == z.fieldName) {\r\n                  x.status = z.status;\r\n                }\r\n              });\r\n              joinTableRef.value.joinTable[1].status = z.status;\r\n              joinTableList.value\r\n                .filter((e) => e.name == \"选择主数据表\")[0]\r\n                .joinFieldList.forEach((x) => {\r\n                  if (x.name == z.fieldName) {\r\n                    x.status = z.status;\r\n                  }\r\n                });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\nconst init = async (v) => {\r\n  let data = null;\r\n  let migrationTable = null;\r\n  if (v == null) {\r\n    data = props.migrationsForm.list[0];\r\n  } else {\r\n    data = v;\r\n  }\r\n  queryName.value = { name: \"选择主数据表\", list: [] };\r\n  let init = data.init;\r\n  value.value = data.random;\r\n  if (data.migrationJoinTables != null) {\r\n    data.migrationJoinTables.forEach((e) => {\r\n      if (e.joinFieldList == null && e.dataSourceId != null) {\r\n        getFieldData(e.dataSourceId, e.name, e.databaseName).then((result) => {\r\n          e.joinFieldList = result;\r\n        });\r\n      }\r\n    });\r\n    joinTableList.value = data.migrationJoinTables;\r\n  } else {\r\n    joinTableList.value = [];\r\n  }\r\n  fieldData.value = await getFieldData(\r\n    data.sourceId,\r\n    data.name,\r\n    data.databaseName\r\n  );\r\n  fieldList.value = await getFieldData(\r\n    data.sourceIds,\r\n    data.sourceName,\r\n    data.sourceDatabaseName\r\n  );\r\n\r\n  if (joinTableList.value.filter((e) => e.name == \"选择主数据表\") == 0) {\r\n    joinTableList.value.push({\r\n      name: \"选择主数据表\",\r\n      uniqueName: \"1\",\r\n      field: \"1\",\r\n      joinFieldList: fieldList.value,\r\n    });\r\n  }\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((v) => {\r\n      if (v.random == value.value) {\r\n        if (v.migration == true) {\r\n          if (v.idType == null) {\r\n            v.idType = 1;\r\n          }\r\n          idType.value = v.idType;\r\n          migrationTable = v;\r\n        } else {\r\n          v.migrationFields.forEach((z) => {\r\n            fieldList.value.forEach((x) => {\r\n              if (x.name == z.fieldName) {\r\n                x.status = z.status;\r\n              }\r\n            });\r\n            console.log(z.status);\r\n            if (z.status == 2) {\r\n              timeType.value = true;\r\n              timeBut.value = \"取消指定时间\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  fieldData.value.forEach((e, index) => {\r\n    e.defaultValue = defaultValue(e);\r\n    const filed = migrationTable.migrationFields.filter((v) => {\r\n      return v.fieldName == e.name;\r\n    });\r\n    if (filed[0].value == null || filed[0].value.trim().length == 0) {\r\n      const data = fieldList.value.filter((v) => {\r\n        return v.name == e.name;\r\n      });\r\n      if (\r\n        data.length > 0 &&\r\n        init != true &&\r\n        (e.status != 1 || idType.value == 1)\r\n      ) {\r\n        e.sourceName = e.name;\r\n      }\r\n    } else {\r\n      e.sourceName = filed[0].value;\r\n    }\r\n\r\n    e.defaulted = filed[0].defaulted;\r\n    e.valueMap = filed[0].valueMap;\r\n  });\r\n  data.init = true;\r\n  getJoinTableOptions();\r\n  tableOptions.value = {\r\n    lazy: true,\r\n    lazyLoad(node, resolve) {\r\n      const { level } = node;\r\n      setTimeout(() => {\r\n        let data = null;\r\n        if (level == 1) {\r\n          // 等于1代表二级目录 获取数据库下所有库\r\n          const value = node.value.split(\";\");\r\n          data = getTable(value[1], value[0]);\r\n          data.then((result) => {\r\n            if (result == null) {\r\n              resolve([]);\r\n            }\r\n            const nodes = result.map((item) => ({\r\n              value: item,\r\n              label: item,\r\n              leaf: level >= 1,\r\n            }));\r\n\r\n            // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n            resolve(nodes);\r\n          });\r\n        } else {\r\n          // 根目录获取所有数据库配置\r\n          data = props.migrationsForm.migrationDataSources;\r\n          if (data == null) {\r\n            resolve([]);\r\n          }\r\n          data = data.filter((e) => JSON.stringify(e) != \"{}\");\r\n          if (data == null) {\r\n            resolve([]);\r\n          }\r\n          const nodes = data.map((item, index) => ({\r\n            value:\r\n              item.databaseName +\r\n              \";\" +\r\n              item.sourceId +\r\n              \";\" +\r\n              item.uniqueName +\r\n              \";\" +\r\n              item.type +\r\n              \";\" +\r\n              index,\r\n            label: item.databaseName,\r\n            leaf: level >= 1,\r\n          }));\r\n\r\n          if (nodes.length == 0) {\r\n            resolve([]);\r\n          }\r\n          // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n          resolve(nodes);\r\n        }\r\n      }, 10);\r\n    },\r\n  };\r\n};\r\nconst getFieldData = async (id, talbeName, databaseName) => {\r\n  const res = await requestUtil.get(\r\n    \"admin_api/v1/dataBase/queryField/\" +\r\n      id +\r\n      \"?\" +\r\n      \"talbeName=\" +\r\n      talbeName +\r\n      \"&databaseName=\" +\r\n      databaseName\r\n  );\r\n  return res.data.data;\r\n};\r\nconst getTable = async (id, dataName) => {\r\n  const res = await requestUtil.get(\r\n    \"admin_api/v1/dataBase//queryTable/\" + id + \"?dataName=\" + dataName\r\n  );\r\n  return res.data.data;\r\n};\r\nconst tableHeaderColor = ({ row, column, rowIndex, columnIndex }) => {\r\n  if (show.value) {\r\n    if (rowIndex === 0 && columnIndex > 7) {\r\n      return { background: \"#eef1f6\", color: \"#3e3f42\" };\r\n    }\r\n    if (rowIndex === 0 && columnIndex <= 7) {\r\n      return { background: \"#eef1f6\" };\r\n    }\r\n  } else {\r\n    if (rowIndex === 0 && columnIndex > 1) {\r\n      return { background: \"#eef1f6\", color: \"#3e3f42\" };\r\n    }\r\n    if (rowIndex === 0 && columnIndex <= 1) {\r\n      return { background: \"#eef1f6\" };\r\n    }\r\n  }\r\n};\r\nconst getJoinTableOptions = () => {\r\n  joinTableOptions.value = {\r\n    lazy: true,\r\n    lazyLoad(node, resolve) {\r\n      const { level } = node;\r\n      setTimeout(() => {\r\n        let data = null;\r\n        if (level == 1) {\r\n          // 等于1代表二级目录 获取数据库下所有库\r\n          let value = node.value;\r\n          data = joinTableList.value.filter(\r\n            (e) =>\r\n              e.uniqueName == value.uniqueName &&\r\n              e.name == value.name &&\r\n              e.field == value.field\r\n          );\r\n          if (data == null) {\r\n            resolve([]);\r\n          }\r\n          const nodes = data[0].joinFieldList.map((item) => ({\r\n            value: item,\r\n            label: item.name,\r\n            leaf: level >= 1,\r\n          }));\r\n\r\n          // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n          resolve(nodes);\r\n        } else {\r\n          // 根目录获取所有数据库配置\r\n          const nodes = joinTableList.value.map((item, index) => ({\r\n            value: item,\r\n            label:\r\n              item.name == \"选择主数据表\"\r\n                ? item.name\r\n                : item.uniqueName + \"/\" + item.name + \"/\" + item.field,\r\n            leaf: level >= 1,\r\n          }));\r\n\r\n          if (nodes.length == 0) {\r\n            resolve([]);\r\n          }\r\n          // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n          resolve(nodes);\r\n        }\r\n      }, 10);\r\n    },\r\n  };\r\n};\r\nconst VisibleChange = () => {\r\n  refSelect.value.forEach((bkpRef) => {\r\n    if (bkpRef.toggleDropDownVisible) {\r\n      bkpRef.toggleDropDownVisible(false);\r\n    } else {\r\n      bkpRef.visible = false;\r\n    }\r\n  });\r\n};\r\nconst deleteRow = (index) => {\r\n  if (fieldData.value[index].valueMap != null) {\r\n    props.migrationsForm.migrationDataSources.forEach((e) => {\r\n      if (e.migrationTables == null) {\r\n        return;\r\n      }\r\n      e.migrationTables = e.migrationTables.map((v) => {\r\n        if (v.random == value.value) {\r\n          if (v.migration == true) {\r\n            v.migrationFields = v.migrationFields.map((x) => {\r\n              if (x.fieldName == fieldData.value[index].name) {\r\n                x.valueMap = null;\r\n              }\r\n              return x;\r\n            });\r\n            if (v.migrationJoinTables != null) {\r\n              v.migrationJoinTables = v.migrationJoinTables.map((x) => {\r\n                if (\r\n                  x.joinFiled != fieldData.value[index].sourceName &&\r\n                  x.name == fieldData.value[index].valueMap[1] &&\r\n                  x.uniqueName == fieldData.value[index].valueMap[0] &&\r\n                  x.field == fieldData.value[index].valueMap[2]\r\n                ) {\r\n                  x.selectList = x.selectList.filter(\r\n                    (z) => z != fieldData.value[index].sourceName\r\n                  );\r\n                }\r\n                return x;\r\n              });\r\n            }\r\n          }\r\n        }\r\n        return v;\r\n      });\r\n    });\r\n  }\r\n  fieldData.value[index].defaulted = \"\";\r\n  fieldData.value[index].sourceName = \"\";\r\n  fieldData.value[index].sourceType = null;\r\n  fieldData.value[index].valueType = null;\r\n  fieldData.value[index].valueMap = null;\r\n  fieldData.value[index].sourceJavaType = null;\r\n  fieldData.value[index].typeConversion = null;\r\n};\r\nconst updateRow = (data) => {\r\n  let table = null;\r\n  updateValue.value = data;\r\n  if (data.sourceName != null) {\r\n    if (data.valueMap == null) {\r\n      table = joinTableList.value.filter((e) => e.name == \"选择主数据表\");\r\n    } else {\r\n      table = joinTableList.value.filter(\r\n        (e) =>\r\n          e.uniqueName == data.valueMap[0] &&\r\n          e.name == data.valueMap[1] &&\r\n          e.field == data.valueMap[2]\r\n      );\r\n    }\r\n    joinTableRef.value.joinTable = [\r\n      table[0],\r\n      table[0].joinFieldList.filter((e) => e.name == data.sourceName)[0],\r\n    ];\r\n  } else {\r\n    joinTableRef.value.joinTable = [];\r\n  }\r\n\r\n  update.value = true;\r\n};\r\n\r\nconst joinTableClose = () => {\r\n  joinTable.value = false;\r\n  joinTableRef.value = {};\r\n};\r\nconst tableSelectClose = () => {\r\n  tableSelect.value = false;\r\n};\r\nconst tableSelectDelete = (e) => {\r\n  queryList.value = queryList.value.filter((v) => v.index != e.index);\r\n};\r\n\r\nconst tableSelectAdd = () => {\r\n  queryList.value.push({ index: parseInt(Math.random() * 1000000) });\r\n};\r\nconst tableSelectSave = () => {\r\n  let error = false;\r\n  let map = {};\r\n  let migrationTable = null;\r\n  let tables = null;\r\n  queryList.value.forEach((e) => {\r\n    let queryValue = null;\r\n    if (e.query == \"=\") {\r\n      queryValue = \"eq\";\r\n    } else if (e.query == \">\") {\r\n      queryValue = \"gt\";\r\n    } else if (e.query == \">=\") {\r\n      queryValue = \"ge\";\r\n    } else if (e.query == \"<\") {\r\n      queryValue = \"lt\";\r\n    } else if (e.query == \"<=\") {\r\n      queryValue = \"le\";\r\n    } else if (e.query == \"!=\") {\r\n      queryValue = \"ne\";\r\n    } else {\r\n      queryValue = e.query;\r\n    }\r\n    map[e.field + \"_&\" + queryValue] = e.value;\r\n    if (\r\n      error == false &&\r\n      (e.query == null || e.field == null || e.value == null)\r\n    ) {\r\n      ElMessage.error(\"参数不能为空！\");\r\n      error = true;\r\n      return;\r\n    }\r\n  });\r\n  if (error) {\r\n    return;\r\n  }\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((v) => {\r\n      if (v.random == value.value) {\r\n        if (v.migration == true) {\r\n          migrationTable = v;\r\n        } else {\r\n          tables = v;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  if (queryName.value.name == \"选择主数据表\") {\r\n    migrationTable.queryMap = map;\r\n    queryList.value.forEach((e) => {\r\n      if (e.field == null || e.field == \"\") {\r\n        return;\r\n      }\r\n      const data = tables.migrationFields.filter((v) => v.fieldName == e.field);\r\n      if (data.length == 0) {\r\n        const fileds = queryName.value.list.filter((v) => v.name == e.field)[0];\r\n        tables.migrationFields.push({\r\n          fieldName: fileds.name,\r\n          fieldType: fileds.type,\r\n          remark: fileds.def,\r\n          status: fileds.status,\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    const data = queryName.value.name.split(\"/\");\r\n    migrationTable.migrationJoinTables.forEach((e) => {\r\n      if (e.uniqueName == data[0] && e.name == data[1] && e.field == data[2]) {\r\n        e.queryMap = map;\r\n      }\r\n    });\r\n    props.migrationsForm.migrationDataSources.forEach((e) => {\r\n      if (e.migrationTables == null) {\r\n        return;\r\n      }\r\n      if (e.uniqueName != data[0]) {\r\n        return;\r\n      }\r\n      e.migrationTables.forEach((v) => {\r\n        if (v.name == data[1]) {\r\n          queryList.value.forEach((z) => {\r\n            if (z.field == null || z.field == \"\") {\r\n              return;\r\n            }\r\n            const data = v.migrationFields.filter(\r\n              (x) => x.fieldName == z.field\r\n            );\r\n            if (data.length == 0) {\r\n              const fileds = queryName.value.list.filter(\r\n                (x) => x.name == z.field\r\n              )[0];\r\n              v.migrationFields.push({\r\n                fieldName: fileds.name,\r\n                fieldType: fileds.type,\r\n                remark: fileds.def,\r\n                status: fileds.status,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  tableSelect.value = false;\r\n};\r\nconst joinTableSave = () => {\r\n  if (\r\n    joinTableRef.value.dataSources == null ||\r\n    joinTableRef.value.query == null ||\r\n    joinTableRef.value.joinFieldList == null\r\n  ) {\r\n    ElMessage.error(\"参数不能为空！\");\r\n    return;\r\n  }\r\n  joinTable.value = false;\r\n  let migrationTable = null;\r\n  let add = true;\r\n  let tableName = joinTableRef.value.dataSources[1];\r\n  let tableUniqueName = joinTableRef.value.dataSources[0].split(\";\")[2];\r\n  /**\r\n   * 添加表和join 字段\r\n   */\r\n  const data = joinTableRef.value.joinFieldList.filter(\r\n    (e) => e.name == joinTableRef.value.join\r\n  );\r\n  let dataFied = {\r\n    fieldName: data[0].name,\r\n    fieldType: data[0].type,\r\n    remark: data[0].remark,\r\n    status: data[0].status,\r\n  };\r\n\r\n  const joinData = fieldList.value.filter(\r\n    (e) => e.name == joinTableRef.value.query\r\n  );\r\n  let joinDataFied = {\r\n    fieldName: joinData[0].name,\r\n    fieldType: joinData[0].type,\r\n    remark: joinData[0].remark,\r\n    status: joinData[0].status,\r\n  };\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((v) => {\r\n      if (v.random == value.value) {\r\n        if (v.migration == true) {\r\n          migrationTable = v;\r\n        } else {\r\n          if (\r\n            v.migrationFields.filter(\r\n              (x) => x.fieldName == joinTableRef.value.query\r\n            ).length == 0\r\n          ) {\r\n            v.migrationFields.push(joinDataFied);\r\n          }\r\n        }\r\n      }\r\n      if (e.uniqueName == tableUniqueName && v.name == tableName) {\r\n        add = false;\r\n        if (\r\n          v.migrationFields.filter(\r\n            (x) => x.fieldName == joinTableRef.value.join\r\n          ).length == 0\r\n        ) {\r\n          v.migrationFields.push(dataFied);\r\n        }\r\n      }\r\n    });\r\n    if (add && e.uniqueName == tableUniqueName) {\r\n      e.migrationTables.push({\r\n        migration: false,\r\n        name: tableName,\r\n        type: e.type,\r\n        migrationFields: [dataFied],\r\n      });\r\n    }\r\n  });\r\n\r\n  if (!migrationTable.migrationJoinTables) {\r\n    migrationTable.migrationJoinTables = [];\r\n  }\r\n  let jointableData = {\r\n    field: joinTableRef.value.query,\r\n    fieldType: joinData[0].javaType,\r\n    joinFiled: joinTableRef.value.join,\r\n    selectList: [joinTableRef.value.join],\r\n    joinFiledType: data[0].javaType,\r\n    joinFieldList: joinTableRef.value.joinFieldList,\r\n    name: tableName,\r\n    uniqueName: tableUniqueName,\r\n  };\r\n  let tableData = migrationTable.migrationJoinTables.filter(\r\n    (e) =>\r\n      e.name == jointableData.name &&\r\n      e.uniqueName == jointableData.uniqueName &&\r\n      e.field == jointableData.field\r\n  );\r\n  if (tableData.length == 0) {\r\n    migrationTable.migrationJoinTables.push(jointableData);\r\n  } else {\r\n    migrationTable.migrationJoinTables = migrationTable.migrationJoinTables.map(\r\n      (e) => {\r\n        if (\r\n          e.name == jointableData.name &&\r\n          e.uniqueName == jointableData.uniqueName &&\r\n          e.field == jointableData.field\r\n        ) {\r\n          e.selectList.forEach((v) => {\r\n            if (v == e.joinFiled) {\r\n              v = jointableData.joinFiled;\r\n            }\r\n          });\r\n        }\r\n        e.joinFiled = jointableData.joinFiled;\r\n        e.joinFiledType = jointableData.joinFiledType;\r\n\r\n        return e;\r\n      }\r\n    );\r\n  }\r\n  joinTableList.value = migrationTable.migrationJoinTables;\r\n  if (joinTableList.value.filter((e) => e.name == \"选择主数据表\") == 0) {\r\n    joinTableList.value.push({\r\n      name: \"选择主数据表\",\r\n      uniqueName: \"1\",\r\n      field: \"1\",\r\n      joinFieldList: fieldList.value,\r\n    });\r\n  }\r\n  getJoinTableOptions();\r\n  joinTableRef.value = {};\r\n};\r\nconst joinTableRow = () => {\r\n  joinTable.value = true;\r\n};\r\nconst selectRow = () => {\r\n  tableSelect.value = true;\r\n  queryInit();\r\n};\r\nconst saveRow = () => {\r\n  update.value = false;\r\n};\r\nconst handleClose = () => {\r\n  update.value = false;\r\n};\r\nconst changeTable = async (value, index) => {\r\n  const data = value[0].split(\";\");\r\n  joinTableRef.value.joinFieldList = await getFieldData(\r\n    data[1],\r\n    value[1],\r\n    data[0]\r\n  );\r\n};\r\nconst changeJoinTable = (values) => {\r\n  // 添加字段  添加valuemap 回显 seclet字段\r\n  const parent = values[0];\r\n  const child = values[1];\r\n  const oldValueMap = updateValue.value.valueMap;\r\n  const oldSourceName = updateValue.value.sourceName;\r\n  let migrationTables = null;\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((v) => {\r\n      if (v.random == value.value && v.migration == true) {\r\n        migrationTables = v;\r\n      }\r\n    });\r\n  });\r\n  if (parent.name != \"选择主数据表\") {\r\n    updateValue.value.valueMap = [parent.uniqueName, parent.name, parent.field];\r\n  } else {\r\n    updateValue.value.valueMap = null;\r\n  }\r\n  if (migrationTables.migrationFields != null) {\r\n    migrationTables.migrationFields.forEach((e) => {\r\n      if (e.fieldName == updateValue.value.name) {\r\n        e.valueMap =\r\n          parent.name != \"选择主数据表\"\r\n            ? [parent.uniqueName, parent.name, parent.field]\r\n            : null;\r\n      }\r\n    });\r\n  }\r\n  updateValue.value.sourceName = child.name;\r\n  if (parent.name != \"选择主数据表\") {\r\n    props.migrationsForm.migrationDataSources.forEach((e) => {\r\n      if (e.migrationTables == null) {\r\n        return;\r\n      }\r\n      e.migrationTables.forEach((v) => {\r\n        if (e.uniqueName == parent.uniqueName && v.name == parent.name) {\r\n          if (\r\n            v.migrationFields.filter((x) => x.fieldName == child.name).length ==\r\n            0\r\n          ) {\r\n            v.migrationFields.push({\r\n              fieldName: child.name,\r\n              fieldType: child.type,\r\n              remark: child.remark,\r\n              status: child.status,\r\n            });\r\n          }\r\n        }\r\n\r\n        if (v.migrationJoinTables != null) {\r\n          v.migrationJoinTables.forEach((x) => {\r\n            if (\r\n              x.uniqueName == parent.uniqueName &&\r\n              x.name == parent.name &&\r\n              x.field == parent.field\r\n            ) {\r\n              if (x.selectList.filter((z) => z == child.name).length == 0) {\r\n                x.selectList.push(child.name);\r\n              }\r\n            }\r\n            if (\r\n              oldValueMap != null &&\r\n              x.name == oldValueMap[1] &&\r\n              x.uniqueName == oldValueMap[0] &&\r\n              x.field == oldValueMap[2] &&\r\n              x.joinFiled != oldSourceName &&\r\n              v.migrationFields.filter(\r\n                (z) =>\r\n                  z.valueMap != null &&\r\n                  z.valueMap.join(\", \") == oldValueMap.join(\", \") &&\r\n                  z.value == oldSourceName\r\n              ).length < 2\r\n            ) {\r\n              x.selectList = x.selectList.filter((z) => z != oldSourceName);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n};\r\nconst queryInit = () => {\r\n  queryList.value = [];\r\n  let map = null;\r\n  let migrationTable = null;\r\n  props.migrationsForm.migrationDataSources.forEach((e) => {\r\n    if (e.migrationTables == null) {\r\n      return;\r\n    }\r\n    e.migrationTables.forEach((e) => {\r\n      if (e.random == value.value) {\r\n        if (e.migration == true) {\r\n          migrationTable = e;\r\n        } else {\r\n        }\r\n      }\r\n    });\r\n  });\r\n  if (queryName.value.name == \"选择主数据表\") {\r\n    queryName.value.list = fieldList.value;\r\n\r\n    map = migrationTable.queryMap;\r\n  } else {\r\n    const data = queryName.value.name.split(\"/\");\r\n    migrationTable.migrationJoinTables.forEach((e) => {\r\n      if (e.uniqueName == data[0] && e.name == data[1] && e.field == data[2]) {\r\n        map = e.queryMap;\r\n        queryName.value.list = e.joinFieldList;\r\n      }\r\n    });\r\n  }\r\n  if (map != null && JSON.stringify(map) != \"{}\") {\r\n    for (let e in map) {\r\n      const split = e.split(\"_&\");\r\n      let queryValue = null;\r\n      if (split[1] == \"eq\") {\r\n        queryValue = \"=\";\r\n      } else if (split[1] == \"gt\") {\r\n        queryValue = \">\";\r\n      } else if (split[1] == \"ge\") {\r\n        queryValue = \">=\";\r\n      } else if (split[1] == \"lt\") {\r\n        queryValue = \"<\";\r\n      } else if (split[1] == \"le\") {\r\n        queryValue = \"<=\";\r\n      } else if (split[1] == \"ne\") {\r\n        queryValue = \"!=\";\r\n      } else {\r\n        queryValue = split[1];\r\n      }\r\n      let v = map[e];\r\n      queryList.value.push({\r\n        value: v,\r\n        index: parseInt(Math.random() * 1000000),\r\n        query: queryValue,\r\n        field: split[0],\r\n      });\r\n    }\r\n  } else {\r\n    queryList.value = [{}];\r\n  }\r\n};\r\nwatch(\r\n  value,\r\n  (newValue, oldValue) => {\r\n    const data = props.migrationsForm.list.filter(\r\n      (e) => e.random == newValue\r\n    )[0];\r\n    init(data);\r\n  },\r\n  { deep: true }\r\n);\r\nwatch(\r\n  queryList,\r\n  (newValue, oldValue) => {\r\n    queryList.value.forEach((e) => {\r\n      if (e.query == \"last\") {\r\n        e.field = \"\";\r\n      }\r\n    });\r\n  },\r\n  { deep: true }\r\n);\r\nwatch(\r\n  queryName,\r\n  (newValue, oldValue) => {\r\n    queryInit();\r\n  },\r\n  { deep: true }\r\n);\r\nwatch(\r\n  idType,\r\n  (newValue, oldValue) => {\r\n    if (idType.value > 1) {\r\n      fieldData.value.forEach((e, index) => {\r\n        if (e.status == 1) {\r\n          deleteRow(index);\r\n        }\r\n      });\r\n    }\r\n    props.migrationsForm.migrationDataSources.forEach((e) => {\r\n      if (e.migrationTables == null) {\r\n        return;\r\n      }\r\n      e.migrationTables.forEach((v) => {\r\n        if (v.random == value.value) {\r\n          if (v.migration == true) {\r\n            v.idType = idType.value;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  },\r\n  { deep: true }\r\n);\r\nwatch(\r\n  fieldData,\r\n  (newValue, oldValue) => {\r\n    fieldData.value.forEach((e, index) => {\r\n      getSourceData(index, e);\r\n    });\r\n    props.migrationsForm.migrationDataSources.forEach((e) => {\r\n      if (e.migrationTables == null) {\r\n        return;\r\n      }\r\n      e.migrationTables.forEach((e) => {\r\n        if (e.random == value.value) {\r\n          if (!e.migrationFields) {\r\n            e.migrationFields = [];\r\n          }\r\n          fieldData.value.forEach((v) => {\r\n            let update = false;\r\n            let migrationField = null;\r\n            if (e.migration == true) {\r\n              migrationField = {\r\n                fieldName: v.name,\r\n                fieldType: v.type,\r\n                valueType: v.valueType,\r\n                value: v.sourceName,\r\n                valueMap: v.valueMap,\r\n                defaulted: v.defaulted,\r\n                remark: v.remark,\r\n                status: v.status,\r\n              };\r\n            } else {\r\n              if (\r\n                v.sourceName == null ||\r\n                v.sourceName.length == 0 ||\r\n                v.valueMap != null\r\n              ) {\r\n                return;\r\n              }\r\n              migrationField = {\r\n                fieldName: v.sourceName,\r\n                fieldType: v.sourceType,\r\n                remark: v.sourceRemark,\r\n                status: v.sourceStatus,\r\n              };\r\n            }\r\n\r\n            e.migrationFields = e.migrationFields.map((x) => {\r\n              if (!x) {\r\n                return x;\r\n              }\r\n              if (\r\n                x.fieldName == v.name &&\r\n                migrationField.fieldName != null &&\r\n                migrationField.fieldName != undefined\r\n              ) {\r\n                if (\r\n                  migrationField.value == null ||\r\n                  migrationField.value == undefined\r\n                ) {\r\n                  migrationField.value = x.value;\r\n                }\r\n                if (\r\n                  migrationField.defaulted == null ||\r\n                  migrationField.defaulted == undefined\r\n                ) {\r\n                  migrationField.defaulted = x.defaulted;\r\n                }\r\n                migrationField.id = x.id;\r\n                if (x.valueMap != null) {\r\n                  migrationField.valueMap = x.valueMap;\r\n                }\r\n                if (x.status != null) {\r\n                  migrationField.status = x.status;\r\n                }\r\n                x = migrationField;\r\n                update = true;\r\n              }\r\n              return x;\r\n            });\r\n            if (\r\n              update == false &&\r\n              migrationField.fieldName != null &&\r\n              migrationField.fieldName != undefined\r\n            ) {\r\n              if (\r\n                e.migrationFields.filter(\r\n                  (e) => e.fieldName == migrationField.fieldName\r\n                ).length == 0\r\n              ) {\r\n                e.migrationFields.push(migrationField);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  },\r\n  { deep: true }\r\n);\r\n\r\ndefineExpose({\r\n  init,\r\n});\r\n</script>\r\n<style scoped>\r\n.m-2 {\r\n  height: 60px;\r\n}\r\n.el-form-item {\r\n  margin-bottom: 25px;\r\n}\r\n.selectTable {\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  padding-top: 4px;\r\n  border-top: 1px solid rgb(240 242 245);\r\n}\r\n</style>\r\n","import script from \"./field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./field.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./field.vue?vue&type=style&index=0&id=feffbeb8&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\bs\\\\wxw\\\\xy-dash-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-feffbeb8\"]])\n\nexport default __exports__"],"names":["idType","ref","timeType","timeBut","fieldData","value","queryList","index","parseInt","Math","random","queryName","name","list","fieldList","joinTableRef","joinTableList","updateValue","show","update","joinTable","tableSelect","refSelect","tableOptions","joinTableOptions","query","selectIdType","type","typeMethod","select","el","push","getSourceData","row","isHav","sourceName","data","valueMap","forEach","e","uniqueName","joinFieldList","v","javaType","typeConversion","Byte","sourceType","sourceStatus","status","sourceRemark","remark","valueType","sourceJavaType","defaultValue","indexOf","selectShow","filter","isShow","setTime","props","migrationsForm","migrationDataSources","migrationTables","migration","migrationFields","z","fieldName","x","init","async","migrationTable","migrationJoinTables","dataSourceId","getFieldData","databaseName","then","result","sourceId","sourceIds","sourceDatabaseName","field","console","log","filed","trim","length","defaulted","getJoinTableOptions","lazy","lazyLoad","node","resolve","level","setTimeout","split","getTable","nodes","map","item","label","leaf","JSON","stringify","id","talbeName","res","requestUtil","dataName","tableHeaderColor","column","rowIndex","columnIndex","background","color","deleteRow","joinFiled","selectList","updateRow","table","joinTableClose","tableSelectClose","tableSelectDelete","tableSelectAdd","tableSelectSave","error","tables","queryValue","ElMessage","queryMap","fileds","fieldType","def","joinTableSave","dataSources","add","tableName","tableUniqueName","join","dataFied","joinData","joinDataFied","jointableData","joinFiledType","tableData","joinTableRow","selectRow","queryInit","saveRow","handleClose","changeTable","changeJoinTable","values","parent","child","oldValueMap","oldSourceName","watch","newValue","oldValue","deep","migrationField","undefined","expose","__exports__"],"sourceRoot":""}