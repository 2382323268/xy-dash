{"version":3,"file":"js/237.6b5ce3ac.js","mappings":"qeAkEMA,GAAOC,EAAAA,EAAAA,IAAI,CACfC,IAAK,EACLC,SAAU,GACVC,SAAU,GACVC,KAAM,EACNC,KAAM,KACNC,KAAM,GACNC,GAAI,KAGAC,GAAQR,EAAAA,EAAAA,IAAI,CAChBE,SAAU,CAAC,CAAEO,UAAU,EAAMC,QAAS,WACtCP,SAAU,CAAC,CAAEM,UAAU,EAAMC,QAAS,WACtCL,KAAM,CAAC,CAAEI,UAAU,EAAMC,QAAS,WAClCJ,KAAM,CAAC,CAAEG,UAAU,EAAMC,QAAS,cAClCH,GAAI,CAAC,CAAEE,UAAU,EAAMC,QAAS,aAG5BC,GAAUX,EAAAA,EAAAA,IAAI,MAEdY,EAAeC,UACnB,MAAMC,QAAYC,EAAAA,GAAAA,IAAgB,4BAA8Bd,GAChEF,EAAKiB,MAAQF,EAAIG,KAAKA,IAAI,EAGtBC,EAAUL,UACdF,EAAQK,MAAMG,UAASN,UACrB,GAAIO,EAAO,CACT,MAAMN,QAAYC,EAAAA,GAAAA,KAChB,gCACAhB,EAAKiB,OAEHF,EAAIG,KAAKI,QACXC,EAAAA,GAAAA,QAAkB,SAElBA,EAAAA,GAAAA,MAAgB,QAEpB,MACEC,QAAQC,IAAI,OACd,GACA,GAGJC,EAAAA,EAAAA,KACE,IAAMC,EAAMC,gBACZ,KACE,IAAI1B,EAAKyB,EAAMzB,IACJ,GAAPA,EACFW,EAAaX,GAEbF,EAAKiB,MAAQ,CACXf,IAAK,EACLC,SAAU,GACVC,SAAU,GACVC,KAAM,EACNC,KAAM,KACNC,KAAM,GACNC,GAAI,GAER,IAMJ,MAAMqB,EAAc,KAClBjB,EAAQK,MAAMa,cACdC,EAAM,qBAAqB,EAAM,EAG7BC,EAAgB,KACpBpB,EAAQK,MAAMG,UAASN,UACrB,GAAIO,EACF,IAAsB,GAAlBrB,EAAKiB,MAAMf,GAAU,CACvB,IAAI+B,QAAejB,EAAAA,GAAAA,KACjB,2BACAhB,EAAKiB,OAEPiB,EAAQD,EACV,KAAO,CACL,IAAIA,QAAejB,EAAAA,GAAAA,KACjB,4BAA8BhB,EAAKiB,MAAMf,GACzCF,EAAKiB,OAEPiB,EAAQD,EACV,MAEAT,QAAQC,IAAI,OACd,GACA,EAGES,EAAWD,IACf,IAAIX,EAAUW,EAAOf,KAAKI,QACtBA,GACFC,EAAAA,GAAAA,QAAkB,SAClBX,EAAQK,MAAMa,cACdC,EAAM,gBACNF,KAEAN,EAAAA,GAAAA,MAAgBU,EAAOf,KAAKiB,IAC9B,E,4oECjKF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://xy-dash-admin/./src/views/config/sources/components/dialog.vue","webpack://xy-dash-admin/./src/views/config/sources/components/dialog.vue?1b2f"],"sourcesContent":["<template>\r\n  <el-dialog\r\n    :modelValue=\"dialogVisible\"\r\n    :title=\"dialogTitle\"\r\n    width=\"30%\"\r\n    clearValidate:\r\n    @close=\"handleClose\"\r\n  >\r\n    <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n      <el-form-item label=\"数据源名称\" prop=\"name\">\r\n        <el-input v-model=\"form.name\" />\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"主机\" prop=\"ip\">\r\n        <el-input v-model=\"form.ip\" />\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"端口\" style=\"width: 180px\" prop=\"port\">\r\n        <el-input v-model=\"form.port\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\" style=\"width: 300px\" prop=\"userName\">\r\n        <el-input v-model=\"form.userName\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" style=\"width: 300px\" prop=\"password\">\r\n        <el-input v-model=\"form.password\" type=\"password\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"类型\" prop=\"type\">\r\n        <el-radio-group v-model=\"form.type\">\r\n          <el-radio :label=\"0\">mysql</el-radio>\r\n          <el-radio :label=\"1\">sqlserver</el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <el-button class=\"test\" plain @click=\"connect\">测试连接</el-button>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确认</el-button>\r\n        <el-button @click=\"handleClose\">取消</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineEmits, defineProps, ref, watch } from \"vue\";\r\nimport requestUtil, { getServerUrl } from \"@/util/request\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nconst props = defineProps({\r\n  id: {\r\n    type: Number,\r\n    default: -1,\r\n    required: true,\r\n  },\r\n  dialogTitle: {\r\n    type: String,\r\n    default: \"\",\r\n    required: true,\r\n  },\r\n  dialogVisible: {\r\n    type: Boolean,\r\n    default: false,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst form = ref({\r\n  id: -1,\r\n  userName: \"\",\r\n  password: \"\",\r\n  type: 0,\r\n  port: null,\r\n  name: \"\",\r\n  ip: \"\",\r\n});\r\n\r\nconst rules = ref({\r\n  userName: [{ required: true, message: \"请输入用户名\" }],\r\n  password: [{ required: true, message: \"密码不能为空\" }],\r\n  port: [{ required: true, message: \"端口不能为空\" }],\r\n  name: [{ required: true, message: \"数据源名称不能为空\" }],\r\n  ip: [{ required: true, message: \"主机不能为空\" }],\r\n});\r\n\r\nconst formRef = ref(null);\r\n\r\nconst initFormData = async (id) => {\r\n  const res = await requestUtil.get(\"admin_api/v1/dataSources/\" + id);\r\n  form.value = res.data.data;\r\n};\r\n\r\nconst connect = async () => {\r\n  formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      const res = await requestUtil.post(\r\n        \"admin_api/v1/dataBase/connect\",\r\n        form.value\r\n      );\r\n      if (res.data.success) {\r\n        ElMessage.success(\"连接成功！\");\r\n      } else {\r\n        ElMessage.error(\"连接失败！\");\r\n      }\r\n    } else {\r\n      console.log(\"fail\");\r\n    }\r\n  });\r\n};\r\n\r\nwatch(\r\n  () => props.dialogVisible,\r\n  () => {\r\n    let id = props.id;\r\n    if (id != -1) {\r\n      initFormData(id);\r\n    } else {\r\n      form.value = {\r\n        id: -1,\r\n        userName: \"\",\r\n        password: \"\",\r\n        type: 0,\r\n        port: null,\r\n        name: \"\",\r\n        ip: \"\",\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nconst emits = defineEmits([\"update:modelValue\", \"initUserList\"]);\r\n\r\nconst handleClose = () => {\r\n  formRef.value.resetFields();\r\n  emits(\"update:modelValue\", false);\r\n};\r\n\r\nconst handleConfirm = () => {\r\n  formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.value.id == -1) {\r\n        let result = await requestUtil.post(\r\n          \"admin_api/v1/dataSources\",\r\n          form.value\r\n        );\r\n        refresh(result);\r\n      } else {\r\n        let result = await requestUtil.post(\r\n          \"admin_api/v1/dataSources/\" + form.value.id,\r\n          form.value\r\n        );\r\n        refresh(result);\r\n      }\r\n    } else {\r\n      console.log(\"fail\");\r\n    }\r\n  });\r\n};\r\n\r\nconst refresh = (result) => {\r\n  let success = result.data.success;\r\n  if (success) {\r\n    ElMessage.success(\"执行成功！\");\r\n    formRef.value.resetFields();\r\n    emits(\"initUserList\");\r\n    handleClose();\r\n  } else {\r\n    ElMessage.error(result.data.msg);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-form-item {\r\n  margin-bottom: 25px;\r\n}\r\n.test {\r\n  display: inline;\r\n  float: left;\r\n}\r\n</style>\r\n","import script from \"./dialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./dialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./dialog.vue?vue&type=style&index=0&id=1d95a88f&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\bs\\\\wxw\\\\xy-dash-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d95a88f\"]])\n\nexport default __exports__"],"names":["form","ref","id","userName","password","type","port","name","ip","rules","required","message","formRef","initFormData","async","res","requestUtil","value","data","connect","validate","valid","success","ElMessage","console","log","watch","props","dialogVisible","handleClose","resetFields","emits","handleConfirm","result","refresh","msg","__exports__"],"sourceRoot":""}